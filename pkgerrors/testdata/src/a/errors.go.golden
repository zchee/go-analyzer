package pkgerrors_example

import (
	errorspkg "errors"
	"fmt"
	// want `found use "github.com/pkg/errors" package`
)

var _ = errorspkg.New
var _ fmt.State
var _ errors.Frame

func PkgErrorsCause(err error) error {
	e1 := errors.New("error")
	e2 := fmt.Errorf("inner: %w", e1)  // want `found use location of the deprecated github.com/pkg/errors`
	e3 := fmt.Errorf("middle: %w", e2) // want `found use location of the deprecated github.com/pkg/errors`
	e4 := fmt.Errorf("outer: %w", e3)  // want `found use location of the deprecated github.com/pkg/errors`
	return errors.Unwrap(e4)           // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorf() error {
	return fmt.Errorf("whoops: %s", "foo") // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorf2() (any, error) {
	return nil, fmt.Errorf("whoops: %s", "foo") // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorf3() (any, struct{}, error) {
	return nil, struct{}{}, fmt.Errorf("whoops: %s", "foo") // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorfWithVerb() error {
	return fmt.Errorf("withverb: %s: %w", "foo", errors.New("bar")) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorfWithVerb2() (any, error) {
	return nil, fmt.Errorf("withverb: %s: %w", "foo", errors.New("bar")) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorfWithVerb3() (any, struct{}, error) {
	return nil, struct{}{}, fmt.Errorf("withverb: %s: %w", "foo", errors.New("bar")) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsErrorfWithVVerb() error {
	return fmt.Errorf("withverb: %s: %w", "foo", errors.New("bar")) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsNew() error {
	return errors.New("whoops") // ok
}

func pkgErrorsWithMessage() error {
	cause := errors.New("whoops")
	return fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func pkgErrorsWithMessage2() (any, error) {
	cause := errors.New("whoops")
	return nil, fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func pkgErrorsWithMessage3() (any, struct{}, error) {
	cause := errors.New("whoops")
	return nil, struct{}{}, fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func pkgErrorsWithMessagef() error {
	cause := errors.New("whoops")
	return fmt.Errorf("oh noes: %s: %w", "yeah", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func pkgErrorsWithMessagef2() (any, error) {
	cause := errors.New("whoops")
	return nil, fmt.Errorf("oh noes: %s: %w", "yeah", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func pkgErrorsWithMessagef3() (any, struct{}, error) {
	cause := errors.New("whoops")
	return nil, struct{}{}, fmt.Errorf("oh noes: %s: %w", "yeah", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrap() error {
	cause := errors.New("whoops")
	return fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrap2() (any, error) {
	cause := errors.New("whoops")
	return nil, fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrap3() (any, struct{}, error) {
	cause := errors.New("whoops")
	return nil, struct{}{}, fmt.Errorf("oh noes: %w", cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrapf() error {
	cause := errors.New("whoops")
	return fmt.Errorf("oh noes #%d: %w", 1, cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrapf2() (any, error) {
	cause := errors.New("whoops")
	return nil, fmt.Errorf("oh noes #%d: %w", 2, cause) // want `found use location of the deprecated github.com/pkg/errors`
}

func PkgErrorsWrapf3() (any, struct{}, error) {
	cause := errors.New("whoops")
	return nil, struct{}{}, fmt.Errorf("oh noes #%d: %w", 3, cause) // want `found use location of the deprecated github.com/pkg/errors`
}
